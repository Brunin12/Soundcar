{"version":3,"file":"static/js/683.1184d2b5.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Home = React.lazy(() => import('./views/home/Home'))\n\nconst routes = [{ path: '/', exact: true, name: 'home', element: Home }]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"Home\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; BrunoSoft &amp; Soundcar</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span>(1990 - 2023)</span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cibWhatsapp, cilPhone, cibGmail, cilHome, cibGithub, cibLinkedin } from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'In√≠cio',\n    to: '/',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'INFO',\n    },\n  },\n  {\n    component: CNavTitle,\n    name: 'Contato',\n  },\n  {\n    component: CNavItem,\n    name: 'Whatsapp',\n    target: '_blank',\n    href: 'https://wa.me/5575988766035',\n    icon: <CIcon icon={cibWhatsapp} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Gmail',\n    target: '_blank',\n    href: 'mailto:jurantec@gmail.com',\n    icon: <CIcon icon={cibGmail} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Telefone',\n    target: '_blank',\n    href: 'tel:+5575988766035',\n    icon: <CIcon icon={cilPhone} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'GitHub',\n    target: '_blank',\n    href: 'https://github.com/Brunin12',\n    icon: <CIcon icon={cibGithub} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'LinkedIn',\n    target: '_blank',\n    href: 'https://www.linkedin.com/company/100754388/',\n    icon: <CIcon icon={cibLinkedin} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CSidebar, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","exact","name","element","React","AppContent","_jsx","CContainer","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","className","AppSidebarNav","_ref","items","location","useLocation","navLink","icon","badge","_Fragment","CBadge","text","navItem","item","index","component","rest","_objectWithoutProperties","_excluded","Component","_createElement","_objectSpread","NavLink","key","navGroup","_item$items","_excluded2","String","toggler","visible","pathname","startsWith","CNavItem","CIcon","cilHome","customClassName","CNavTitle","target","href","cibWhatsapp","cibGmail","cilPhone","cibGithub","cibLinkedin","AppSidebar","dispatch","useDispatch","unfoldable","useSelector","state","sidebarUnfoldable","sidebarShow","CSidebar","position","onVisibleChange","type","CSidebarNav","SimpleBar","navigation","CSidebarToggler","onClick"],"sourceRoot":""}